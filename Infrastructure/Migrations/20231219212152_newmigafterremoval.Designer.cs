// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RealDatabase))]
    [Migration("20231219212152_newmigafterremoval")]
    partial class newmigafterremoval
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("CanFly")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Birds");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec759a5f-5ad9-4a80-86db-846eedcb7ec2"),
                            CanFly = true,
                            Name = "Adam"
                        },
                        new
                        {
                            Id = new Guid("ccbd0ea5-5d64-4a0b-b21d-439e62e997e0"),
                            CanFly = true,
                            Name = "Perry"
                        },
                        new
                        {
                            Id = new Guid("99ae69ef-12ba-48a3-a98b-4627819d047d"),
                            CanFly = true,
                            Name = "Tweet"
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345612"),
                            CanFly = true,
                            Name = "TestBirdForUnitTests"
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345613"),
                            CanFly = true,
                            Name = "TestDeleteBird"
                        });
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ceb31031-edbd-4792-b1ae-b597ad5c49b3"),
                            LikesToPlay = true,
                            Name = "Nugget"
                        },
                        new
                        {
                            Id = new Guid("db7b20ab-57da-4cea-8be0-9859f7e038f3"),
                            LikesToPlay = true,
                            Name = "SmallMac"
                        },
                        new
                        {
                            Id = new Guid("0963b3aa-2caa-4c0f-bd14-9797f2fbee68"),
                            LikesToPlay = false,
                            Name = "Avocado"
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345610"),
                            LikesToPlay = true,
                            Name = "TestCatForUnitTests"
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345611"),
                            LikesToPlay = true,
                            Name = "TestDeleteCat"
                        });
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Dogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e0a0f114-3c7a-48af-9e10-4f1a8c238119"),
                            Name = "Björn"
                        },
                        new
                        {
                            Id = new Guid("65e9cbbe-99f7-4571-921b-f12163a218ee"),
                            Name = "Patrik"
                        },
                        new
                        {
                            Id = new Guid("cabceb19-b94e-45a3-9100-933b9ce68ce7"),
                            Name = "Alfred"
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345678"),
                            Name = "TestDogForUnitTests"
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345679"),
                            Name = "TestDeleteDog"
                        });
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae00b67a-599a-4937-9030-cf14e26f3a92"),
                            PasswordHash = "Rob123",
                            Username = "rob"
                        },
                        new
                        {
                            Id = new Guid("39ca1432-2b6f-41aa-a5c0-d3c12b300a42"),
                            PasswordHash = "Stefan123",
                            Username = "stefan"
                        },
                        new
                        {
                            Id = new Guid("e30ba2b5-4dbf-4e2f-9014-84ce1e538472"),
                            PasswordHash = "navjet123",
                            Username = "Navjet"
                        },
                        new
                        {
                            Id = new Guid("036acc54-c50d-4f51-a9d8-e3f99fc75b12"),
                            PasswordHash = "FindNemo123",
                            Username = "Nemm"
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345614"),
                            PasswordHash = "",
                            Username = "TestDeleteUser"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
