// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RealDatabase))]
    [Migration("20231229203142_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("BirdColor")
                        .HasColumnType("longtext");

                    b.Property<string>("Breed")
                        .HasColumnType("longtext");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Animals");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AnimalModel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("32778b1c-a51e-4451-9f82-15bd6d344a2b"),
                            PasswordHash = "Rob123",
                            Username = "rob"
                        },
                        new
                        {
                            Id = new Guid("a00bfe4e-0e56-437c-ae7a-26eb1ca5a9a1"),
                            PasswordHash = "Stefan123",
                            Username = "stefan"
                        },
                        new
                        {
                            Id = new Guid("f5052d6e-b7eb-4dff-a661-0b3ad1735a36"),
                            PasswordHash = "navjet123",
                            Username = "Navjet"
                        },
                        new
                        {
                            Id = new Guid("d17adc59-29a8-4647-b7c9-ef45db3d7ded"),
                            PasswordHash = "FindNemo123",
                            Username = "Nemm"
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345614"),
                            PasswordHash = "",
                            Username = "TestDeleteUser"
                        });
                });

            modelBuilder.Entity("Domain.Models.UserAnimal", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "AnimalId");

                    b.HasIndex("AnimalId");

                    b.ToTable("UserAnimals");
                });

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<bool>("CanFly")
                        .HasColumnType("tinyint(1)");

                    b.HasDiscriminator().HasValue("Bird");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1a9e6d77-00b1-4f8e-8bbf-f057361f7ff9"),
                            BirdColor = "Green",
                            Name = "Adam",
                            CanFly = true
                        },
                        new
                        {
                            Id = new Guid("88e595f7-5c30-4490-acfd-3f8b124f7b4f"),
                            BirdColor = "Red",
                            Name = "Perry",
                            CanFly = true
                        },
                        new
                        {
                            Id = new Guid("2321294e-caaa-4e61-981f-28546577d451"),
                            BirdColor = "Blue",
                            Name = "Tweet",
                            CanFly = true
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345612"),
                            BirdColor = "Purple",
                            Name = "TestBirdForUnitTests",
                            CanFly = true
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345613"),
                            BirdColor = "White",
                            Name = "TestDeleteBird",
                            CanFly = true
                        });
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.HasDiscriminator().HasValue("Cat");

                    b.HasData(
                        new
                        {
                            Id = new Guid("adeb57ba-e53a-47f5-8399-94df4d8bc29d"),
                            Breed = "Fluffy",
                            Name = "Nugget",
                            Weight = 2,
                            LikesToPlay = true
                        },
                        new
                        {
                            Id = new Guid("d6289259-f9bd-46d2-a708-44d39927935b"),
                            Breed = "NakedCat",
                            Name = "SmallMac",
                            Weight = 2,
                            LikesToPlay = true
                        },
                        new
                        {
                            Id = new Guid("4a6f640d-7af4-4f50-a915-683450951ea8"),
                            Breed = "Lion",
                            Name = "Avocado",
                            Weight = 200,
                            LikesToPlay = false
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345610"),
                            Breed = "Leopard",
                            Name = "TestCatForUnitTests",
                            Weight = 50,
                            LikesToPlay = true
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345611"),
                            Breed = "Panther",
                            Name = "TestDeleteCat",
                            Weight = 100,
                            LikesToPlay = true
                        });
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.HasDiscriminator().HasValue("Dog");

                    b.HasData(
                        new
                        {
                            Id = new Guid("87104dc3-84f9-4506-88ae-b85e4cbbc13a"),
                            Breed = "Golden",
                            Name = "Björn",
                            Weight = 5
                        },
                        new
                        {
                            Id = new Guid("d16edc97-5611-4ee8-8623-a1529c626e92"),
                            Breed = "Weenerdog",
                            Name = "Rio",
                            Weight = 5
                        },
                        new
                        {
                            Id = new Guid("31853c9c-f21b-43a2-a5a0-1d8d7138d49b"),
                            Breed = "Bulldog",
                            Name = "Alfred",
                            Weight = 5
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345678"),
                            Breed = "Dobberman",
                            Name = "TestDogForUnitTests",
                            Weight = 6
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345679"),
                            Breed = "Canecorso",
                            Name = "TestDeleteDog",
                            Weight = 5
                        });
                });

            modelBuilder.Entity("Domain.Models.UserAnimal", b =>
                {
                    b.HasOne("Domain.Models.Animal.AnimalModel", "Animal")
                        .WithMany("UserAnimals")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "user")
                        .WithMany("UserAnimals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Navigation("UserAnimals");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("UserAnimals");
                });
#pragma warning restore 612, 618
        }
    }
}
