// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RealDatabase))]
    partial class RealDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AnimalModel");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AnimalModel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("28a71c01-94b7-412c-bf34-d84b9ceedb55"),
                            PasswordHash = "Rob123",
                            Username = "rob"
                        },
                        new
                        {
                            Id = new Guid("b139c64a-5aa5-43f0-b7f3-c75f8a322085"),
                            PasswordHash = "Stefan123",
                            Username = "stefan"
                        },
                        new
                        {
                            Id = new Guid("2001b559-bbff-4624-af0b-f28121e6ae79"),
                            PasswordHash = "navjet123",
                            Username = "Navjet"
                        },
                        new
                        {
                            Id = new Guid("101e0987-23bd-4475-983d-72d9e3cf5230"),
                            PasswordHash = "FindNemo123",
                            Username = "Nemo"
                        });
                });

            modelBuilder.Entity("Domain.Models.UserAnimal", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "AnimalId");

                    b.HasIndex("AnimalId");

                    b.ToTable("UserAnimals");
                });

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<string>("BirdColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("CanFly")
                        .HasColumnType("tinyint(1)");

                    b.HasDiscriminator().HasValue("Bird");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3e0e0635-5a89-47b1-b490-1f52750d3928"),
                            Name = "Adam",
                            BirdColor = "Green",
                            CanFly = true
                        },
                        new
                        {
                            Id = new Guid("9ad0afa1-c0de-47a3-912a-09a65f3943d2"),
                            Name = "Perry",
                            BirdColor = "Red",
                            CanFly = true
                        },
                        new
                        {
                            Id = new Guid("ce8d2c98-8ea7-4ebd-907e-662da3ea65a2"),
                            Name = "Tweet",
                            BirdColor = "Blue",
                            CanFly = true
                        });
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<string>("CatBreed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CatWeight")
                        .HasColumnType("int");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.HasDiscriminator().HasValue("Cat");

                    b.HasData(
                        new
                        {
                            Id = new Guid("883ae556-b539-4521-8b2e-ce2231bb688e"),
                            Name = "Nugget",
                            CatBreed = "Fluffy",
                            CatWeight = 2,
                            LikesToPlay = true
                        },
                        new
                        {
                            Id = new Guid("16c624d8-de21-4d11-9184-dd51200cc0ac"),
                            Name = "SmallMac",
                            CatBreed = "NakedCat",
                            CatWeight = 2,
                            LikesToPlay = true
                        },
                        new
                        {
                            Id = new Guid("8a638eaf-83c5-439a-9331-ea9833b47d2d"),
                            Name = "Avocado",
                            CatBreed = "Lion",
                            CatWeight = 200,
                            LikesToPlay = false
                        });
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<string>("DogBreed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DogWeight")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Dog");

                    b.HasData(
                        new
                        {
                            Id = new Guid("234dcd1b-2c02-4558-92ac-13d2101deb20"),
                            Name = "Björn",
                            DogBreed = "Golden",
                            DogWeight = 5
                        },
                        new
                        {
                            Id = new Guid("f6efd467-9d6f-43b2-89d2-05007b771676"),
                            Name = "Rio",
                            DogBreed = "Weenerdog",
                            DogWeight = 5
                        },
                        new
                        {
                            Id = new Guid("c8dab3d3-420b-4172-ae42-0c51b7ec88b8"),
                            Name = "Alfred",
                            DogBreed = "Bulldog",
                            DogWeight = 5
                        });
                });

            modelBuilder.Entity("Domain.Models.UserAnimal", b =>
                {
                    b.HasOne("Domain.Models.Animal.AnimalModel", "AnimalModel")
                        .WithMany("UserAnimals")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "user")
                        .WithMany("UserAnimals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimalModel");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Navigation("UserAnimals");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("UserAnimals");
                });
#pragma warning restore 612, 618
        }
    }
}
